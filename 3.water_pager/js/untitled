timingfn = {};
timingfn.linear = function(e) {
	return e
};
timingfn.swing = function(e) {
	return .5 - Math.cos(e * Math.PI) / 2
};
timingfn.easeInQuad = function(p) {
	return Math.pow(p, 2);
};
timingfn.easeOutQuad = function(p) {
	return 1 - timingfn.easeInQuad(1 - p);
};
timingfn.easeInOutQuad = function(p) {
	return p < 0.5 ?
		timingfn.easeInQuad(p * 2) / 2 :
		1 - timingfn.easeInQuad(p * -2 + 2) / 2;
};
timingfn.easeInCubic = function(p) {
	return Math.pow(p, 3);
};
timingfn.easeOutCubic = function(p) {
	return 1 - timingfn.easeInCubic(1 - p);
};
timingfn.easeInOutCubic = function(p) {
	return p < 0.5 ?
		timingfn.easeInCubic(p * 2) / 2 :
		1 - timingfn.easeInCubic(p * -2 + 2) / 2;
};
timingfn.easeInQuart = function(p) {
	return Math.pow(p, 4);
};
timingfn.easeOutQuart = function(p) {
	return 1 - timingfn.easeInQuart(1 - p);
};
timingfn.easeInOutQuart = function(p) {
	return p < 0.5 ?
		timingfn.easeInQuart(p * 2) / 2 :
		1 - timingfn.easeInQuart(p * -2 + 2) / 2;
};
timingfn.easeInQuint = function(p) {
	return Math.pow(p, 5);
};
timingfn.easeOutQuint = function(p) {
	return 1 - timingfn.easeInQuint(1 - p);
};
timingfn.easeInOutQuint = function(p) {
	return p < 0.5 ?
		timingfn.easeInQuint(p * 2) / 2 :
		1 - timingfn.easeInQuint(p * -2 + 2) / 2;
};
timingfn.easeInExpo = function(p) {
	return Math.pow(p, 6);
};
timingfn.easeOutExpo = function(p) {
	return 1 - timingfn.easeInExpo(1 - p);
};
timingfn.easeInOutExpo = function(p) {
	return p < 0.5 ?
		timingfn.easeInExpo(p * 2) / 2 :
		1 - timingfn.easeInExpo(p * -2 + 2) / 2;
};
timingfn.easeInSine = function(p) {
	return 1 - Math.cos(p * Math.PI / 2);
};
timingfn.easeOutSine = function(p) {
	return 1 - timingfn.easeInSine(1 - p);
};
timingfn.easeInOutSine = function(p) {
	return p < 0.5 ?
		timingfn.easeInSine(p * 2) / 2 :
		1 - timingfn.easeInSine(p * -2 + 2) / 2;
};
timingfn.easeInCirc = function(p) {
	return 1 - Math.sqrt(1 - p * p);
};
timingfn.easeOutCirc = function(p) {
	return 1 - timingfn.easeInCirc(1 - p);
};
timingfn.easeInOutCirc = function(p) {
	return p < 0.5 ?
		timingfn.easeInCirc(p * 2) / 2 :
		1 - timingfn.easeInCirc(p * -2 + 2) / 2;
};
timingfn.easeInElastic = function(p) {
	return p === 0 || p === 1 ? p :
		-Math.pow(2, 8 * (p - 1)) * Math.sin(((p - 1) * 80 - 7.5) * Math.PI / 15);
};
timingfn.easeOutElastic = function(p) {
	return 1 - timingfn.easeInElastic(1 - p);
};
timingfn.easeInOutElastic = function(p) {
	return p < 0.5 ?
		timingfn.easeInElastic(p * 2) / 2 :
		1 - timingfn.easeInElastic(p * -2 + 2) / 2;
};
timingfn.easeInBack = function(p) {
	return p * p * (3 * p - 2);
};
timingfn.easeOutBack = function(p) {
	return 1 - timingfn.easeInBack(1 - p);
};
timingfn.easeInOutBack = function(p) {
	return p < 0.5 ?
		timingfn.easeInBack(p * 2) / 2 :
		1 - timingfn.easeInBack(p * -2 + 2) / 2;
};
timingfn.easeInBounce = function(p) {
	var pow2,
		bounce = 4;

	while (p < ((pow2 = Math.pow(2, --bounce)) - 1) / 11) {};
	return 1 / Math.pow(4, 3 - bounce) - 7.5625 * Math.pow((pow2 * 3 - 2) / 22 - p, 2);
};
timingfn.easeOutBounce = function(p) {
	return 1 - timingfn.easeInBounce(1 - p);
};
timingfn.easeInOutBounce = function(p) {
	return p < 0.5 ?
		timingfn.easeInBounce(p * 2) / 2 :
		1 - timingfn.easeInBounce(p * -2 + 2) / 2;
};